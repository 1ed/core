<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Resource collection -->

        <service id="api_platform.metadata.resource.factory.collection" alias="api_platform.metadata.resource.factory.collection.annotation" />

        <service id="api_platform.metadata.resource.factory.collection.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory" public="false">
            <argument type="service" id="annotation_reader" />
        </service>

        <!-- Resource item -->

        <service id="api_platform.metadata.resource.factory.item" alias="api_platform.metadata.resource.factory.item.annotation" />

        <service id="api_platform.metadata.resource.factory.item.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory" public="false">
            <argument type="service" id="annotation_reader" />
        </service>

        <service id="api_platform.metadata.resource.factory.item.php_doc" class="ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory" decorates="api_platform.metadata.resource.factory.item" public="false">
            <argument type="service" id="api_platform.metadata.resource.factory.item.php_doc.inner" />
        </service>

        <service id="api_platform.metadata.resource.factory.item.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" decorates="api_platform.metadata.resource.factory.item" public="false">
            <argument type="service" id="api_platform.metadata.resource.factory.item.short_name.inner" />
        </service>

        <service id="api_platform.metadata.resource.factory.item.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" decorates="api_platform.metadata.resource.factory.item" public="false">
            <argument type="service" id="api_platform.metadata.resource.factory.item.operation.inner" />
        </service>

        <!-- Property collection -->

        <service id="api_platform.metadata.property.factory.collection" alias="api_platform.metadata.property.factory.collection.property_info" />

        <!--
        Not used, the PropertyInfo factory is preferred.

        <service id="api_platform.metadata.property.factory.collection.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyNameCollectionFactory" public="false">
            <argument type="service" id="annotation_reader" />
        </service>
        -->

        <service id="api_platform.metadata.property.factory.collection.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
            <argument type="service" id="api_platform.property_info" />
        </service>

        <!-- Property item -->

        <service id="api_platform.metadata.property.factory.item" alias="api_platform.metadata.property.factory.item.annotation" />

        <service id="api_platform.metadata.property.factory.item.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" public="false">
            <argument type="service" id="annotation_reader" />
        </service>

        <!-- The PropertyInfo decorator must always be the first decorator, it will create the metadata if it doesn't exist -->
        <service id="api_platform.metadata.property.factory.item.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" decorates="api_platform.metadata.property.factory.item" public="false">
            <argument type="service" id="api_platform.property_info" />
            <argument type="service" id="api_platform.metadata.property.factory.item.property_info.inner" />
        </service>

        <service id="api_platform.metadata.property.factory.item.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" decorates="api_platform.metadata.property.factory.item" public="false">
            <argument type="service" id="api_platform.metadata.resource.factory.item" />
            <argument type="service" id="serializer.mapping.class_metadata_factory" />
            <argument type="service" id="api_platform.metadata.property.factory.item.serializer.inner" />
        </service>

        <service id="api_platform.metadata.property.factory.item.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory" decorates="api_platform.metadata.property.factory.item" public="false">
            <argument type="service" id="validator" />
            <argument type="service" id="api_platform.metadata.property.factory.item.validator.inner" />
        </service>

    </services>

</container>
